name: Nightly QA (GitHub-only)

on:
  schedule:
    - cron: "0 2 * * *"     # 02:00 UTC nightly
  workflow_dispatch: {}

permissions:
  contents: write
  pull-requests: write

jobs:
  nightly:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout default branch
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.repository.default_branch }}

      # Tiny heartbeat so there is always a commit to trigger checks
      - name: Prepare host commit
        run: |
          mkdir -p .github/automation
          date -u +"nightly: %Y-%m-%dT%H:%M:%SZ" > .github/automation/nightly-heartbeat.txt

      # Open or update a sticky host PR on a fixed branch
      - name: Open/Update Nightly Host PR
        id: cpr
        uses: peter-evans/create-pull-request@v6
        with:
          branch: automation/nightly-qa
          title: 'chore(nightly): full QA host PR'
          commit-message: 'chore(nightly): trigger nightly QA'
          body: |
            **Nightly QA host PR**

            This is a sticky PR that automation updates nightly to run checks and
            give instructions to the tooling.

            Nightly run: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}

            _The content change is only a heartbeat file to trigger checks._
          labels: automation, nightly
          draft: false

      - name: Add routing label (optional)
        if: ${{ steps.cpr.outputs.pull-request-number }}
        uses: actions/github-script@v7
        with:
          script: |
            try {
              await github.rest.issues.addLabels({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: Number('${{ steps.cpr.outputs.pull-request-number }}'),
                labels: ['cursor:nightly']
              });
            } catch (e) {
              core.info('Label add skipped: ' + e.message);
            }

      # Post the instruction as YOU (requires repo secret GH_USER_TOKEN)
      - name: Post instruction comment as user
        if: ${{ steps.cpr.outputs.pull-request-number && secrets.GH_USER_TOKEN != '' }}
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GH_USER_TOKEN }}
          script: |
            const owner   = context.repo.owner;
            const repo    = context.repo.repo;
            const pr      = Number('${{ steps.cpr.outputs.pull-request-number }}');
            const branch  = '${{ github.event.repository.default_branch }}';
            const runUrl  = `${process.env.GITHUB_SERVER_URL}/${owner}/${repo}/actions/runs/${process.env.GITHUB_RUN_ID}`;

            const lines = [
              `@Cursor please run full QA on this host PR for \`${owner}/${repo}\` (branch \`${branch}\`):`,
              '',
              '- Typecheck',
              '- Lint',
              '- Unit/Integration tests with coverage',
              '- Playwright E2E (if present)',
              '- Raise coverage on changed modules',
              '- Open minimal PRs/commits with fixes and a short summary',
              '- **Do not** change RLS or payments; **no** prod DB migrations.',
              '',
              `Run: ${runUrl}`
            ];
            const body = lines.join('\n');

            await github.rest.issues.createComment({
              owner, repo, issue_number: pr, body
            });
