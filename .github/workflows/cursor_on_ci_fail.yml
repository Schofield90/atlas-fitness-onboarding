name: "Cursor: On CI Fail"

on:
  workflow_run:
    workflows: ["CI"]          # change if your CI workflow has a different name
    types: [completed]
  workflow_dispatch: {}        # manual Run button

jobs:
  ping-cursor-on-fail:
    if: >
      ${{
        github.event.workflow_run.conclusion != 'success' &&
        github.event.workflow_run.event == 'pull_request' &&
        github.event.workflow_run.actor != 'cursor[bot]'
      }}
    runs-on: ubuntu-latest
    steps:
      - name: Build message
        id: build
        run: |
          BRANCH="${{ github.event.workflow_run.head_branch }}"
          REPO="${{ github.event.workflow_run.head_repository.full_name }}"
          URL="${{ github.event.workflow_run.html_url }}"
          {
            echo "BRANCH=$BRANCH"
            echo "REPO=$REPO"
            echo "URL=$URL"
          } >> "$GITHUB_OUTPUT"

      - name: Send to Slack
        env:
          SLACK_USER_TOKEN: ${{ secrets.SLACK_USER_TOKEN }}
          SLACK_CHANNEL_ID: ${{ secrets.SLACK_CHANNEL_ID_BUGFIX }}
          CURSOR_USER_ID: ${{ secrets.CURSOR_USER_ID }}
          BRANCH: ${{ steps.build.outputs.BRANCH }}
          REPO:   ${{ steps.build.outputs.REPO }}
          URL:    ${{ steps.build.outputs.URL }}
        run: |
          TEXT="<@${CURSOR_USER_ID}> [repo=${REPO}, branch=${BRANCH}] fetch the failing CI logs (${URL}), fix the failures, add a regression test, and update the PR. Keep the diff minimal; do not change RLS or payments."

          read -r -d '' PAYLOAD <<'JSON' || true
          {
            "channel": "'"$SLACK_CHANNEL_ID"'",
            "text": "'"$TEXT"'",
            "link_names": true,
            "unfurl_links": false
          }
          JSON

          curl -s -X POST https://slack.com/api/chat.postMessage \
            -H "Authorization: Bearer $SLACK_USER_TOKEN" \
            -H "Content-type: application/json; charset=utf-8" \
            --data "$PAYLOAD"
